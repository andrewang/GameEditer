package net.protocl.file{	import net.protocl.MyByteArray;	import net.protocl.MessageBase;	import net.protocl.IMessage;	public class S_2_C_SIGN_IN extends MessageBase implements IMessage	{		public var cycle:int = 0;		public var day:int = 0;		public var reward_gold:int = 0;		public var reward_money:int = 0;		public var reward_star_value:int = 0;		public var items:Vector.<SIGN_IN_INFO> = new Vector.<SIGN_IN_INFO>;		public function S_2_C_SIGN_IN()		{			super(ProtoclId.S_2_C_SIGN_IN);		}		//打包函数		public function encode():MyByteArray		{			var bytes:MyByteArray = new MyByteArray();			encodeShort(bytes,cycle);			encodeShort(bytes,day);			encodeInt32(bytes,reward_gold);			encodeInt32(bytes,reward_money);			encodeInt32(bytes,reward_star_value);			encodeRepeatMessage(bytes,items);			return bytes;		}		//解包函数		public function decode(bytes:MyByteArray):void		{			cycle = decodeShort(bytes);			day = decodeShort(bytes);			reward_gold = decodeInt32(bytes);			reward_money = decodeInt32(bytes);			reward_star_value = decodeInt32(bytes);			decodeRepeatMessage(bytes,SIGN_IN_INFO,items);		}		//打印函数		override public function getString(func,p:String="")		{			func(p + "{");			p += "	";			func(p + "cycle:" + cycle);			func(p + "day:" + day);			func(p + "reward_gold:" + reward_gold);			func(p + "reward_money:" + reward_money);			func(p + "reward_star_value:" + reward_star_value);			func(p + "[");			for(var i:int = 0; i < items.length; i++)			{				this.items[i].getString(func,p + "	");			}			func(p + "]");			p = p.slice(1,p.length);			func(p + "}");		}	}}