package net.protocl.file{	import net.protocl.MyByteArray;	import net.protocl.MessageBase;	import net.protocl.IMessage;	public class ClosePlayerInfo extends MessageBase implements IMessage	{		public var role_id:int = 0;		public var profession:int = 0;		public var level:int = 0;		public var role_name:String = "";		public var pos_x:int = 0;		public var pos_y:int = 0;		public var riding_id:int = 0;	//坐骑ID,0表示没有坐骑		public function ClosePlayerInfo()		{			super(ProtoclId.ClosePlayerInfo);		}		//打包函数		public function encode():MyByteArray		{			var bytes:MyByteArray = new MyByteArray();			encodeInt32(bytes,role_id);			encodeByte(bytes,profession);			encodeShort(bytes,level);			encodeStringLength(bytes,role_name,32);			encodeInt32(bytes,pos_x);			encodeInt32(bytes,pos_y);			encodeInt32(bytes,riding_id);			return bytes;		}		//解包函数		public function decode(bytes:MyByteArray):void		{			role_id = decodeInt32(bytes);			profession = decodeByte(bytes);			level = decodeShort(bytes);			role_name = decodeStringLength(bytes,32);			pos_x = decodeInt32(bytes);			pos_y = decodeInt32(bytes);			riding_id = decodeInt32(bytes);		}		//打印函数		override public function getString(func,p:String="")		{			func(p + "{");			p += "	";			func(p + "role_id:" + role_id);			func(p + "profession:" + profession);			func(p + "level:" + level);			func(p + "role_name:" + role_name);			func(p + "pos_x:" + pos_x);			func(p + "pos_y:" + pos_y);			func(p + "riding_id:" + riding_id);			p = p.slice(1,p.length);			func(p + "}");		}	}}