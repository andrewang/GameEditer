package net.protocl.file{	import net.protocl.MyByteArray;	import net.protocl.MessageBase;	import net.protocl.IMessage;	public class ServerInfo extends MessageBase implements IMessage	{		public var server_id:int = 0;		public var server_name:String = "";		public var server_town:String = "";		public var server_line:String = "";		public var server_state:int = 0;		public function ServerInfo()		{			super(ProtoclId.ServerInfo);		}		//打包函数		public function encode():MyByteArray		{			var bytes:MyByteArray = new MyByteArray();			encodeInt32(bytes,server_id);			encodeStringLength(bytes,server_name,32);			encodeStringLength(bytes,server_town,32);			encodeStringLength(bytes,server_line,32);			encodeShort(bytes,server_state);			return bytes;		}		//解包函数		public function decode(bytes:MyByteArray):void		{			server_id = decodeInt32(bytes);			server_name = decodeStringLength(bytes,32);			server_town = decodeStringLength(bytes,32);			server_line = decodeStringLength(bytes,32);			server_state = decodeShort(bytes);		}		//打印函数		override public function getString(func,p:String="")		{			func(p + "{");			p += "	";			func(p + "server_id:" + server_id);			func(p + "server_name:" + server_name);			func(p + "server_town:" + server_town);			func(p + "server_line:" + server_line);			func(p + "server_state:" + server_state);			p = p.slice(1,p.length);			func(p + "}");		}	}}